{"version":3,"sources":["./src/app/core/services/auth.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/core/services/mocking.service.ts","./src/app/app.module.ts","./src/app/core/modules/notfound/notfound.component.ts","./src/app/core/modules/notfound/notfound.component.html","./src/app/contact/contact.component.ts","./src/app/contact/contact.component.html","./src/app/core/services/auth.guard.ts","./src/app/core/modules/material.module.ts","./src/app/core/modules/navbar/navbar.component.html","./src/app/core/modules/navbar/navbar.component.ts","./src/app/core/services/transaction.service.ts","./src/app/item-list/item-list.component.html","./src/app/item-list/item-list.component.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { User } from '../models/user.model';\nimport { TransactionService } from './transaction.service';\n\n@Injectable()\nexport class AuthService {\n  private loggedIn: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  get isLoggedIn() {\n    return this.loggedIn.asObservable();\n  }\n\n  constructor(\n    private router: Router,\n    private post: TransactionService\n  ) {}\n\n  login(user: User) {\n    this.post.post('login',user).subscribe((res)=>{\n      if(res == true){\n        this.loggedIn.next(true);\n        this.router.navigate(['/admin']);\n      }\n      else{\n        console.log('Usuario o COntraseña incorrectos');\n        //this.logout();        \n      }\n    },\n    (err)=>{\n      console.log(err);\n      this.logout();\n    });    \n  }\n\n  logout() {\n    this.loggedIn.next(false);\n    this.router.navigate(['/']);\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  interval :number = 6000;\n  mode = new FormControl('over');\n  slides = [{'image': 'https://img.vixdata.io/pd/jpg-large/es/sites/default/files/imj/hogartotal/o/ovillo-de-lana-juguete-seguro-para-un-gato-1.jpg'}, {'image': 'https://thumbs.dreamstime.com/b/gato-con-la-bola-de-lana-9058001.jpg'}];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayoutAlign=\"space-around\" class=\"content-div\">\n<mat-card class=\"main-card\">\n<mat-card-header>\n  <mat-card-title>Bienvenido</mat-card-title>\n</mat-card-header>\n<mat-card-content>\n  <p>Este sitio fue creado con la ilusión de repatir amor, de una de las muchas formas que un ovillo de lana puede hacerlo.\n    El proyecto nace como una idea de emprendimiento mezclando las pasiones de una pareja conformada por una mujer adicta a las lanas y su novio al desarrollo web. de atenmano esperamos que disfrutes de nuestros productos y agradecemos de corazón todo tu apoyo.</p>\n  <i>-Sara y Henry</i>\n  <mat-carousel\n  [autoplay]='false'\n  [hideArrows]='false'\n  [hideIndicators]='false'\n  color='primary'\n  maxWidth='99%'\n  [proportion]='30'>\n  <mat-carousel-slide\n    *ngFor=\"let slide of slides; let i = index\"\n    [image]=\"slide.image\"\n  >  \n</mat-carousel-slide>\n</mat-carousel>\n\n  \n</mat-card-content>\n</mat-card>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n<div class=\"footer-basic\">\n  <footer>\n      <div class=\"social\">\n        <a href=\"https://www.instagram.com/\"><i class=\"icon ion-social-instagram\"></i></a>\n        <a href=\"https://www.twitter.com/\"><i class=\"icon ion-social-twitter\"></i></a>\n        <a href=\"https://www.facebook.com/\"><i class=\"icon ion-social-facebook\"></i></a>\n      </div>\n      <p class=\"copyright\">Made by Pecons © 2021</p>\n  </footer>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../core/services/auth.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n  public step = 0;\n\n  constructor(private auth : AuthService) { }\n\n  ngOnInit(): void {\n    \n  }  \n\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  nextStep() {\n    this.step++;\n  }\n\n  prevStep() {\n    this.step--;\n  }\n\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n<mat-card>\n    <mat-accordion class=\"example-headers-align\">\n        <mat-expansion-panel [expanded]=\"step === 0\" (opened)=\"setStep(0)\" hideToggle>\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              Personal data\n            </mat-panel-title>\n            <mat-panel-description>\n              Type your name and age\n              <mat-icon>account_circle</mat-icon>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n      \n          <mat-form-field>\n            <mat-label>First name</mat-label>\n            <input matInput>\n          </mat-form-field>\n      \n          <mat-form-field>\n            <mat-label>Age</mat-label>\n            <input matInput type=\"number\" min=\"1\">\n          </mat-form-field>\n          <mat-action-row>\n            <button mat-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n          </mat-action-row>\n        </mat-expansion-panel>\n      \n        <mat-expansion-panel [expanded]=\"step === 1\" (opened)=\"setStep(1)\" hideToggle>\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              Destination\n            </mat-panel-title>\n            <mat-panel-description>\n              Type the country name\n              <mat-icon>map</mat-icon>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n      \n          <mat-form-field>\n            <mat-label>Country</mat-label>\n            <input matInput>\n          </mat-form-field>\n      \n          <mat-action-row>\n            <button mat-button color=\"warn\" (click)=\"prevStep()\">Previous</button>\n            <button mat-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n          </mat-action-row>\n        </mat-expansion-panel>\n      \n        <mat-expansion-panel [expanded]=\"step === 2\" (opened)=\"setStep(2)\" hideToggle>\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              Day of the trip\n            </mat-panel-title>\n            <mat-panel-description>\n              Inform the date you wish to travel\n              <mat-icon>date_range</mat-icon>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n      \n          <mat-form-field>\n            <mat-label>Date</mat-label>\n            <input matInput [matDatepicker]=\"picker\" (focus)=\"picker.open()\" readonly>\n          </mat-form-field>\n          <mat-datepicker #picker></mat-datepicker>\n      \n          <mat-action-row>\n            <button mat-button color=\"warn\" (click)=\"prevStep()\">Previous</button>\n            <button mat-button color=\"accent\" (click)=\"nextStep()\">End</button>\n          </mat-action-row>\n        </mat-expansion-panel>\n      \n      </mat-accordion>\n</mat-card>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class MockingService {\n\n\tprivate mocks: Set<string> = new Set();\n\tprivate obs: Observable<any>;\n\n\tconstructor(private http: HttpClient) {\n\t\tthis.obs = this.http.get(`../../../assets/mocks/register.json`);\n\t\tthis.obs.subscribe(\n\t\t\t(data: Array<string>) => {\n\t\t\t\tdata.forEach(mockName => {\n\t\t\t\t\tthis.mocks.add(mockName);\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\thas(route: string): Observable<boolean> {\n\t\tif (this.mocks) {\n\t\t\treturn of(this.mocks.has(route));\n\t\t}\n\t\treturn this.obs.pipe(\n\t\t\tmap(mocks => {\n\t\t\t\tconst index = mocks.indexOf(route);\n\t\t\t\treturn index >= 0 ? true : false;\n\t\t\t})\n\t\t);\n\t}\n\n\tpublic getJSON(filename: string): Observable<any> {\n\t\treturn this.http.get(`../../../assets/mocks/${filename}.json`).pipe(\n\t\t\tmap(data => {\t\t\t\n\t\t\t\treturn {\n\t\t\t\t\tisValid: true,\n\t\t\t\t\tdata\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatCardModule} from '@angular/material/card';\nimport { MaterialComponentsModule } from './core/modules/material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { NotfoundComponent } from './core/modules/notfound/notfound.component';\nimport { NavbarComponent } from './core/modules/navbar/navbar.component';\nimport { MatCarouselModule } from '@ngbmodule/material-carousel';\nimport { ContactComponent } from './contact/contact.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AdminComponent } from './admin/admin.component';\nimport { AuthService } from './core/services/auth.service';\nimport { AuthGuard } from './core/services/auth.guard';\nimport { ItemListComponent } from './item-list/item-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    NotfoundComponent,\n    NavbarComponent,\n    ContactComponent,\n    AdminComponent,\n    ItemListComponent\n  ],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MaterialComponentsModule,\n    MatCarouselModule.forRoot(),\n    HttpClientModule\n  ],\n  providers: [AuthService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.scss']\n})\nexport class NotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n<div id=\"notfound\">\n    <div class=\"notfound\">\n    <div class=\"notfound-404\">\n    <h1>4<span></span>4</h1>\n    </div>\n    <h2>Oops! Ha ocurrido un error</h2>\n    <p>Lo siento, pero la página que buscas no existe.</p>\n    <a routerLink=\"/\">Volver al inicio</a>\n    </div>\n</div>\n</mat-card>","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { TransactionService } from '../core/services/transaction.service';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss']\n})\nexport class ContactComponent implements OnInit {\n\n  contactFormGroup: FormGroup;\n  disableForm : boolean = false; \n\n  constructor(private builder: FormBuilder,\n    private http: HttpClient,\n    private post: TransactionService,\n    private snackBar: MatSnackBar)\n               {  \n    this.contactFormGroup = this.builder.group(\n      {\n        name:['', Validators.required],\n        email:['', [Validators.required, Validators.email]],\n        message:['', Validators.required],\n      }\n    );\n\n   }\n\n  ngOnInit(): void {\n  }\n  \n\n  getErrorMessage(control : AbstractControl) {\n    if (control.hasError('required')) {\n      return 'Debes ingresar un valor';\n    }\n    else if (control.hasError('email')){\n      return 'Por favor introduzca un correo válido.';\n\n    }\n    else return '';\n  }\n\n  makeQuery(){\n    this.disableForm=true;\n    this.http.post('api/mensajes',this.contactFormGroup.value).subscribe(\n    (res) =>{\n      this.disableForm=false;\n      this.snackBar.open(\"Mensaje enviado satisfactoriamente.\",\"cerrar\", {\n        duration: 5000,\n      });\n      this.contactFormGroup.reset()\n    },      \n    (err)=>{\n      this.snackBar.open(\"Error al enviar el formulario.\",\"cerrar\", {\n        duration: 5000,\n      });\n      console.log(err.message);\n      this.disableForm=false;\n    });\n  }\n\n}\n","\n<div fxLayout=\"column\" fxLayoutAlign=\"space-around center\">    \n<mat-card  class=\"main-card\">\n<div>\n<p i18n>Por favor llene los datos mostrados a continuación, intentaremos responder lo más rápido posible.</p>\n<form [formGroup]=\"contactFormGroup\" fxLayout=\"column\" fxLayoutAlign=\"space-around center\">  \n<mat-form-field appearance=\"fill\">  \n    <mat-label i18n>Nombre</mat-label>\n    <input matInput formControlName=name>\n    <mat-error>{{getErrorMessage(contactFormGroup.controls.name)}}</mat-error>\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label i18n>Email</mat-label>\n    <input matInput placeholder=\"pat@example.com\" formControlName=\"email\" required>\n    <mat-error>{{getErrorMessage(contactFormGroup.controls.email)}}</mat-error>\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label i18n>Mensaje</mat-label>\n    <textarea matInput formControlName=message></textarea>\n    <mat-error>{{getErrorMessage(contactFormGroup.controls.message)}}</mat-error>\n  </mat-form-field>\n</form>\n</div>  \n<div fxLayout=\"column\" fxLayoutAlign=\"end end\">\n<button mat-raised-button color=\"primary\" [disabled]=\"contactFormGroup.invalid || disableForm\" (click)=\"makeQuery()\">Enviar</button>\n</div>\n</mat-card>\n</div>","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> {\n    return this.authService.isLoggedIn         // {1}\n      .pipe(\n        take(1),                              // {2} \n        map((isLoggedIn: boolean) => {         // {3}\n          if (!isLoggedIn){\n            this.router.navigate(['/login']);  // {4}\n            return false;\n          }\n          return true;\n        })\n      );\n  }\n}","import { NgModule } from '@angular/core';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\n\n@NgModule({\n\texports: [\n\t\tA11yModule,\n\t\tClipboardModule,\n\t\tCdkStepperModule,\n\t\tCdkTableModule,\n\t\tCdkTreeModule,\n\t\tDragDropModule,\n\t\tFlexLayoutModule,\n\t\tMatAutocompleteModule,\n\t\tMatBadgeModule,\n\t\tMatBottomSheetModule,\n\t\tMatButtonModule,\n\t\tMatButtonToggleModule,\n\t\tMatCardModule,\n\t\tMatCheckboxModule,\n\t\tMatChipsModule,\n\t\tMatStepperModule,\n\t\tMatDatepickerModule,\n\t\tMatDialogModule,\n\t\tMatDividerModule,\n\t\tMatExpansionModule,\n\t\tMatGridListModule,\n\t\tMatIconModule,\n\t\tMatInputModule,\n\t\tMatListModule,\n\t\tMatMenuModule,\n\t\tMatNativeDateModule,\n\t\tMatPaginatorModule,\n\t\tMatProgressBarModule,\n\t\tMatProgressSpinnerModule,\n\t\tMatRadioModule,\n\t\tMatRippleModule,\n\t\tMatSelectModule,\n\t\tMatSidenavModule,\n\t\tMatSliderModule,\n\t\tMatSlideToggleModule,\n\t\tMatSnackBarModule,\n\t\tMatSortModule,\n\t\tMatTableModule,\n\t\tMatTabsModule,\n\t\tMatToolbarModule,\n\t\tMatTooltipModule,\n\t\tMatTreeModule,\n\t\tPortalModule,\n\t\tScrollingModule,\n\t],\n\tdeclarations: []\n})\nexport class MaterialComponentsModule { }","<header role=\"banner\" fxFlex >\n    <img id=\"logo-main\" src=\"../../../../assets/imgs/logo.png\" width=\"500\" alt=\"Logo Thing main logo\">\n  <nav id=\"navbar-primary\" class=\"navbar navbar-default\" role=\"navigation\">\n    <div class=\"container-fluid\">\n      <div class=\"collapse navbar-collapse\" id=\"navbar-primary-collapse\">\n        <ul class=\"nav navbar-nav\" i18n>\n          <li><button routerLink='/' mat-button>Inicio</button></li>\n          <li><button mat-button [matMenuTriggerFor]=\"main_menu\">Categorías <mat-icon>arrow_drop_down</mat-icon></button>\n            <mat-menu #main_menu=\"matMenu\">\n              <ng-container *ngFor=\"let mainItem of menuList;let i = index\">\n                <button mat-menu-item [matMenuTriggerFor]=\"sub_menu\" routerLink='items' [queryParams]=\"{filterby:mainItem.name}\">{{mainItem.name}}</button>\n                <mat-menu #sub_menu=\"matMenu\">\n                   <button *ngFor=\"let subItem of menuList[i].subcategories\" mat-menu-item routerLink='items' [queryParams]=\"{filterby:subItem}\">{{ replaceUnderScores(subItem) }}</button>\n                </mat-menu>\n              </ng-container>\n            </mat-menu>           \n        </li>                     \n        <li><button  routerLink='contact' mat-button>Contáctanos</button></li>\n        <li><button routerLink='shoplist' mat-button style=\"font-weight: bold;\"><mat-icon>local_mall</mat-icon>{{post.getcartItems()}}</button></li>\n        <li *ngIf=\"authService.isLoggedIn | async\"><button  routerLink='admin' mat-button>Admin Panel</button>\n          <button  mat-stroked-button color=\"warn\" (click)=\"authService.logout()\">Cerrar Sesión</button>\n        </li>        \n        <!-- <li><button mat-button color=\"warn\" [matMenuTriggerFor]=\"language\">Cambiar Idioma<mat-icon>arrow_drop_down</mat-icon></button>\n          <mat-menu #language=\"matMenu\">\n            <button mat-menu-item (click)=\"changeLanguage('es')\">Español</button>\n            <button mat-menu-item (click)=\"changeLanguage('en')\">English</button>\n          </mat-menu> \n        </li> -->\n        </ul>      \n        \n      </div><!-- /.navbar-collapse -->\n    </div><!-- /.container-fluid -->\n  </nav>\n  </header><!-- header role=\"banner\" -->\n","import { Component, OnInit } from '@angular/core';\nimport { Category } from '../../models/category.model';\nimport { AuthService } from '../../services/auth.service';\nimport { TransactionService } from '../../services/transaction.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  public menuList: Array<Category> = [];\n  objectKeys = Object.keys;\n\n  constructor(public authService: AuthService,\n              public post : TransactionService) {  \n\n\n                \n                \n               }\n\n  ngOnInit(): void {\n\n    this.post.get('categories').subscribe((res)=>{\n      this.menuList = this.menuList.concat(res);\n    });\n  }\n\n  replaceUnderScores(value : string){\n    return value.split('_').join(' ');\n\n  }\n\n  changeLanguage(value:any){\n    this.post.setLang(value);\n    console.log(this.post.getLang());\n  }\n}\n","\n\n//Servicio para el CRUD con el API.\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Params } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { of } from 'rxjs/internal/observable/of';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { MockingService } from './mocking.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Injectable({providedIn: 'root'})\nexport class TransactionService {   \n\n    private lang: string = 'es';\n    private URI :string = 'api';\n    private _cartItems: number = 0;\n    \n    \n    constructor(\n        private http: HttpClient,\n        private mocks: MockingService,\n        private route: ActivatedRoute\n        ) { }\n\n        sayHi(){\n            return console.log(\"Hola soy el servicio de Transacciones.\");\n            }\n    \n        // -----------------EXAMPLE RETRIEVED FROM DEEPSARS--------------------------------\n        // public read(route: string, data: any, params?: Params): Observable<any> {\n        // \treturn this.mocks.has(route).pipe(\n        // \t\tmergeMap(has => {\n        // \t\t\tif (has) {\n        // \t\t\t\treturn this.mocks.getJSON(route).pipe(map(result => result.data));\n        // \t\t\t}\n        // \t\t\treturn of(true);//this.send(route, 'read', data, params);\n        // \t\t})\n        // \t);\n        // }\n        //---------------------------------------------------------------------------------\n        \n\n\n\n    //Get {ObtenerLista, ObtenerDato}\n    public get(route:string,params?:Params):Observable<any>{\n        return this.mocks.has(route).pipe(\n            mergeMap(has => {\n                if (has) {\n                    return this.mocks.getJSON(route).pipe(map(result => result.data));\n                }\n                return this.mocks.getJSON(route).pipe(map(result => result.data));\n                return this.http.get(`${this.URI}/${route}`,params);\n            })\n        );\n    }\n    //Post {Crear Documento} \n    public post(route:string,data:any, params?: Params):Observable<any>{\n        return this.mocks.has(route).pipe(\n            mergeMap(has => {\n                if (has) {                    \n                    return this.mocks.getJSON(route).pipe(map(result => result.data));\n                }else{\n                return this.mocks.getJSON(route).pipe(map(result => result.data));\n                return this.http.post(`${this.URI}/${route}`,data,params);\n                }\n            })\n        );\n\n    }       \n\n    //Put {Actualizar Documento}\n\n    //Delete {Actualizar Documento}\n    \n    public getLang() : string{\n        return this.lang\n    }\n\n    public setLang(val : string){\n        this.lang = val;\n    }\n\n    public getcartItems() :number {\n        if(localStorage.getItem('_cartItems') != null){\n            const currentValue =  JSON.parse(localStorage.getItem('_cartItems') || '{}');          \n            return parseInt(currentValue);            \n        }else{\n            return this._cartItems;\n        }\n        \n    }\n    public setcartItems(value: number) {\n        this._cartItems = value;\n        localStorage.setItem('_cartItems', JSON.stringify(this._cartItems));\n    }\n    \n}\n\n\n\n","<div fxLayoutAlign=\"space-evenly\" fxLayout=\"row wrap\" fxLayoutGap=\"30px\" class=\"item-div\">\n\n    <mat-card *ngFor=\"let item of itemList\" class=\"item-card\">\n        <img mat-card-image class=\"item-card-image\" src=\"{{item.image}}\" alt=\"{{item.name}}\">\n        <mat-card-content>\n            <span>{{item.value}}</span>\n            <br>\n             <span>Existencias : {{item.stock}}</span>\n            <br>\n            <span fxLayout=\"row\" fxLayoutAlign=\"start\"> <p>Precio :</p>  <p class=\"price\">${{item.price}}</p></span>          \n            \n          \n        </mat-card-content>\n        <mat-card-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n          <button mat-stroked-button color=\"accent\" (click)=\"post.setcartItems(post.getcartItems()+1)\">Añadir al Carrito</button>\n          <button mat-stroked-button color=\"primary\" (click)=\"enviarMensaje(item)\">Comprar</button>\n        </mat-card-actions>\n    </mat-card>\n\n\n\n</div>","import { Component, OnChanges, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Item } from '../core/models/item.model';\nimport { TransactionService } from '../core/services/transaction.service';\n\n@Component({\n  selector: 'app-item-list',\n  templateUrl: './item-list.component.html',\n  styleUrls: ['./item-list.component.scss']\n})\nexport class ItemListComponent implements OnInit {\n\n  queryparam :string = '';\n  itemList : Array<Item> = [];\n\n  constructor(public post : TransactionService,\n              route:ActivatedRoute) {    \n\n    route.queryParams.subscribe(params =>{      \n        this.queryparam=params.filterby\n        this.post.get('items').subscribe((res:Array<any>)=>{\n          if(this.queryparam!=undefined){\n            this.itemList=res.filter(value=>value.categories.includes(this.queryparam));\n          }else{\n            this.itemList=res;\n          }         \n          console.log(this.itemList);\n        });      \n    });\n\n   }\n\n  ngOnInit(): void {    \n\n  }\n\n  enviarMensaje(item:Item){\n    window.open(`https://api.whatsapp.com/send?phone=+57 3013448093&text=Hola, Estoy interesado en comprar un/a ${item.value}`, '_blank');\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminComponent } from './admin/admin.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { NotfoundComponent } from './core/modules/notfound/notfound.component';\nimport { AuthGuard } from './core/services/auth.guard';\nimport { HomeComponent } from './home/home.component';\nimport { ItemListComponent } from './item-list/item-list.component';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n\n  {\n\t\tpath: '',component: HomeComponent \n\t},\n  {path: 'contact', component: ContactComponent},\n  { path: 'admin', component: AdminComponent, canActivate: [AuthGuard]},\n\t{ path: 'login', component: LoginComponent },\n  {path:'404',component: NotfoundComponent},\n  {path:'items',component: ItemListComponent},\n\t{ path: '**', pathMatch:'full' ,redirectTo: '404' }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup;                    \n  private formSubmitAttempt: boolean; \n\n  constructor(\n    private fb: FormBuilder,         \n    private authService: AuthService \n  ) {    \n    this.form = this.fb.group({    \n      user: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n    this.formSubmitAttempt = false    \n\n  }\n\n  ngOnInit() {\n  }\n\n  isFieldInvalid(field: string) { \n    return (\n      (!this.form.get(field)!.valid && this.form.get(field)!.touched) ||\n      (this.form.get(field)!.untouched && this.formSubmitAttempt)\n    );\n  }\n\n  onSubmit() {\n    if (this.form.valid) {\n      this.authService.login(this.form.value); \n    }\n    this.formSubmitAttempt = true;             \n  }\n\n}\n","    \n<div fxLayout=\"column\" fxLayoutAlign=\"space-around center\">    \n    <mat-card>\n      <mat-card-content>\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" fxLayout=\"column\" fxLayoutAlign=\"space-around center\">\n          <p>Introduzca las credenciales a continuación.</p>\n          <mat-form-field class=\"full-width-input\">\n            <input matInput placeholder=\"Usuario\" formControlName=\"user\" required>\n            <mat-error *ngIf=\"isFieldInvalid('user')\">\n              Introduzca un nombre de usuario Válido.\n            </mat-error>\n          </mat-form-field>\n          <mat-form-field class=\"full-width-input\">\n            <input matInput type=\"password\" placeholder=\"Contraseña\" formControlName=\"password\" required>\n            <mat-error *ngIf=\"isFieldInvalid('user')\">\n              Introduzca una contraseña Válida.\n            </mat-error>\n          </mat-form-field>\n          <button mat-raised-button color=\"primary\">Login</button>\n        </form>\n      </mat-card-content>\n    </mat-card>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}